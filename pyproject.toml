[build-system]
requires = ["setuptools>=60", "setuptools-scm>=8.0"]

[project]
name = "test_project"
dynamic = ["version"]
description = "test project"
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.8"
classifiers=[
    "License :: OSI Approved :: Apache Software License"
]

[project.optional-dependencies]

dev = [
    "pre-commit>=3.0.4,<4.0",
]

[tool.setuptools.packages.find]
where = [""]
include = [
  "test_project",
  "test_project.cat",
  "test_project.dog",
]

[tool.ruff]
target-version = "py310"
# same as black's default line length
line-length = 88

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# modern type annotations
extend-safe-fixes = ["UP006", "UP007"]

# Fixers will be enabled gradually.
select = [
  "B", # flake8-bugbear
  "E", # pycodestyle
  "F", # Pyflakes
  "Q", # flake8-quotes
  # Ruff does not support isort's import_headings feature, yet.
  # "I",   # isort
  # "UP",  # pyupgrade
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
]
ignore = [
  "B904", # TODO: "raise from err" or "raise from None"
  # some embedded strings are longer than 88 characters
  "E501",   # line too long
  "SIM108", # Use ternary operator
  "SIM102", # Use a single if instead of nested if
  "TID252", # Prefer absolute imports over relative imports from parent modules
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"yamllint".msg = "yamllint is for CLI usage only."

[tool.ruff.lint.isort]
# same as .isort.cfg
from-first = true
# not supported yet
# import-heading-future=Future
# import-heading-stdlib=Standard
# import-heading-thirdparty=Third Party
# import-heading-firstparty=First Party
# import-heading-localfolder=Local

